name: Vercel Deploy

on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  group: vercel-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN | cat

      - name: Build Project Artifacts
        run: vercel build --yes --token=$VERCEL_TOKEN | cat

      - name: Deploy to Vercel (Preview)
        run: vercel deploy --prebuilt --token=$VERCEL_TOKEN | cat

  production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN | cat

      - name: Build Project Artifacts
        run: vercel build --yes --token=$VERCEL_TOKEN | cat

      - name: Deploy to Vercel (Production)
        run: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN | cat

